{"version":3,"sources":["components/Burger/BurgerIngredient/BurgerIngredient.module.css","components/Navigation/SideDrawer/SideDrawer.module.css","components/Burger/BuildControls/BuildControl/BuildControl.module.css","components/UI/Input/Input.module.css","components/Navigation/Toolbar/Toolbar.module.css","components/Navigation/NavigationItems/NavigationItem/NavigationItem.module.css","components/Burger/BuildControls/BuildControls.module.css","components/UI/Button/Button.module.css","containers/Layout/Layout.module.css","assets/images/burger-logo.png","components/Logo/Logo.module.css","components/Navigation/NavigationItems/NavigationItems.module.css","components/Navigation/SideDrawer/DrawerToggle/DrawerToggle.module.css","components/UI/Backdrop/Backdrop.module.css","components/Burger/Burger.module.css","components/UI/Modal/Modal.module.css","components/UI/Spinner/Spinner.module.css","components/Order/CheckoutSummary/CheckoutSummary.module.css","containers/Checkout/ContactData/ContactData.module.css","components/Order/Order.module.css","components/Logo/Logo.js","components/Navigation/NavigationItems/NavigationItem/NavigationItem.js","components/Navigation/NavigationItems/NavigationItems.js","components/Navigation/SideDrawer/DrawerToggle/DrawerToggle.js","components/Navigation/Toolbar/Toolbar.js","components/UI/Backdrop/Backdrop.js","components/Navigation/SideDrawer/SideDrawer.js","containers/Layout/Layout.js","axios-orders.js","components/Burger/BuildControls/BuildControl/BuildControl.js","components/Burger/BuildControls/BuildControls.js","components/Burger/BurgerIngredient/BurgerIngredient.js","components/Burger/Burger.js","components/UI/Button/Button.js","components/Burger/OrderSummary/OrderSummary.js","components/UI/Modal/Modal.js","components/UI/Spinner/Spinner.js","hoc/withErrorHandler/withErrorHandler.js","containers/BurgerBuilder/BurgerBuilder.js","store/actions/burgerBuilder.js","store/actions/actionsTypes.js","store/actions/order.js","components/Order/CheckoutSummary/CheckoutSummary.js","components/UI/Input/Input.js","containers/Checkout/ContactData/ContactData.js","containers/Checkout/Checkout.js","components/Order/Order.js","containers/Orders/Orders.js","App.js","serviceWorker.js","store/utility.js","store/reducers/burgerBuilder.js","store/reducers/order.js","index.js"],"names":["module","exports","logo","props","className","classes","Logo","src","burgerLogo","alt","navigationItem","NavigationItem","to","link","exact","activeClassName","active","children","navigationItems","NavigationItems","drawerToggle","DrawerToggle","onClick","clicked","toolbar","Toolbar","drawerToggleClicked","DesktopOnly","backdrop","show","Backdrop","sideDrawer","attachedClasses","SideDrawer","Close","open","Open","Fragment","closed","join","Layout","state","showSideDrawer","sideDrawerClosedHandler","setState","sideDrawerToggleHandler","prevState","this","Content","Component","instance","axios","create","baseURL","buildControl","BuildControl","Label","label","Less","removed","disabled","More","added","controls","type","buildControls","BuildControls","price","toFixed","map","control","key","ingredientAdded","ingredientRemoved","disabledInfo","OrderButton","orderNowDisabled","orderNowClicked","BurgerIngredient","ingredient","BreadBottom","BreadTop","Seeds1","Seeds2","Meat","Cheese","Bacon","Salad","burger","transformedIngredient","Object","keys","ingredients","igKey","Array","_","i","reduce","arr","el","concat","length","Burger","Button","btnType","orderSummary","ingredientSummary","style","textTransform","cancel","continue","Modal","shouldComponentUpdate","nextProps","nextState","backdropClicked","transform","opacity","Spinner","Loader","withErrorHandler","WrappedComponent","error","errorConfirmedHandler","reqInterceptor","interceptors","request","use","req","resInterceptor","response","res","eject","message","BurgerBuilder","purchasing","updatedOrderNowDisabled","sum","orderNowClickedHandler","orderCanceledHandler","orderContinueHandler","onInitPurchase","history","push","onInitIngredients","ings","onIngredientAdded","onIngredientRemoved","OrderSummary","connect","burgerBuilder","totalPrice","dispatch","ingName","ingredientName","get","then","data","catch","err","checkoutSummary","CheckoutSummary","width","margin","checkoutCanceled","checkoutContinued","input","inputElemnet","inputClasses","InputElement","invalid","shouldValidate","touched","Invalid","elementType","elementConfig","value","onChange","changed","options","option","displayValue","Input","ContactData","orderForm","name","placeholder","validation","required","valid","street","zipCode","minLength","maxeLength","country","email","deliveryMethod","formIsValid","orderHandler","event","preventDefault","formData","formElementId","order","orderData","onOrderBurger","inputChangedHandler","inputId","updatedOrderForm","updatedFormElement","target","checkVaildity","rules","isValid","trim","maxLength","formElementsArray","id","config","form","onSubmit","formElement","loading","post","orderId","purchaseBurgerSuccess","actions","Checkout","checkoutCanceledHandler","goBack","checkoutContinuedHandler","replace","summary","purchasedRedirect","purchased","path","match","component","qty","ingredientsOutput","ig","display","border","padding","Order","Orders","onFetchOrders","orders","fetchedOrders","App","Boolean","window","location","hostname","updateObject","oldObject","updatedProperties","initialState","INGREDIENT_PRICES","salad","bacon","cheese","meat","addIngredient","action","updatedIngredient","updatedState","removeIngredient","setIngredient","fetchIngredientsFailed","reducer","purchaseBurgerStart","newOrder","purchaseBurgerFailed","purchaseInit","fetchOrdersStart","fetchOrdersSuccess","fetchOrdersFailed","composeEnhancers","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","rootReducer","combineReducers","burgerBuilderReducer","orderReducer","store","createStore","applyMiddleware","thunk","app","basename","process","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.265ee932.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"BreadBottom\":\"BurgerIngredient_BreadBottom__XkILj\",\"BreadTop\":\"BurgerIngredient_BreadTop__2j31_\",\"Seeds1\":\"BurgerIngredient_Seeds1__27hmq\",\"Seeds2\":\"BurgerIngredient_Seeds2__2Jfa1\",\"Meat\":\"BurgerIngredient_Meat__3pRZE\",\"Cheese\":\"BurgerIngredient_Cheese__27VFg\",\"Salad\":\"BurgerIngredient_Salad__1NXrB\",\"Bacon\":\"BurgerIngredient_Bacon__1RSwJ\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"SideDrawer\":\"SideDrawer_SideDrawer__yxRdv\",\"Open\":\"SideDrawer_Open__FBJL-\",\"Close\":\"SideDrawer_Close__25zdy\",\"Logo\":\"SideDrawer_Logo__1mVDJ\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"BuildControl\":\"BuildControl_BuildControl__3hmJD\",\"Label\":\"BuildControl_Label__3DG-j\",\"Less\":\"BuildControl_Less__2TO4M\",\"More\":\"BuildControl_More__1r9LD\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Input\":\"Input_Input__1gbtz\",\"Label\":\"Input_Label__1eqk9\",\"InputElement\":\"Input_InputElement__3rQ6n\",\"Invalid\":\"Input_Invalid__Sw4mX\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Toolbar\":\"Toolbar_Toolbar__36yyd\",\"Logo\":\"Toolbar_Logo__s1Am4\",\"DesktopOnly\":\"Toolbar_DesktopOnly__3jGXg\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"NavigationItem\":\"NavigationItem_NavigationItem__247ZD\",\"active\":\"NavigationItem_active__1W7a-\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"BuildControls\":\"BuildControls_BuildControls__37ezW\",\"OrderButton\":\"BuildControls_OrderButton__3uYRr\",\"enable\":\"BuildControls_enable__ONPI4\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Button\":\"Button_Button__14-gp\",\"Success\":\"Button_Success__3xpOr\",\"Danger\":\"Button_Danger__19Ud9\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Content\":\"Layout_Content__i3m43\"};","module.exports = __webpack_public_path__ + \"static/media/burger-logo.b8503d26.png\";","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Logo\":\"Logo_Logo__2f1-A\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"NavigationItems\":\"NavigationItems_NavigationItems__1xkH3\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"DrawerToggle\":\"DrawerToggle_DrawerToggle__CjnAo\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Backdrop\":\"Backdrop_Backdrop__1dNba\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Burger\":\"Burger_Burger__17psd\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Modal\":\"Modal_Modal__1Yns3\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Loader\":\"Spinner_Loader__1IOaV\",\"load6\":\"Spinner_load6__Ur62q\",\"round\":\"Spinner_round__3D6qL\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"CheckoutSummary\":\"CheckoutSummary_CheckoutSummary__35e6y\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"ContactData\":\"ContactData_ContactData__3Aw3r\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Order\":\"Order_Order__24Xq4\"};","import React from 'react';\r\nimport burgerLogo from '../../assets/images/burger-logo.png';\r\nimport classes from './Logo.module.css';\r\n\r\nconst logo = (props) => (\r\n    <div className={classes.Logo}>\r\n        <img src={burgerLogo} alt='MyBurger' />\r\n    </div>\r\n);\r\n\r\nexport default logo;","import React from 'react';\r\nimport { NavLink } from 'react-router-dom';\r\nimport classes from './NavigationItem.module.css'\r\n\r\nconst navigationItem = (props) => (\r\n    <li className={classes.NavigationItem}>\r\n        <NavLink\r\n            to={props.link}\r\n            exact={props.exact}\r\n            activeClassName={classes.active}>\r\n            {props.children}\r\n        </NavLink>\r\n    </li>\r\n);\r\n\r\nexport default navigationItem;\r\n","import React from 'react';\r\nimport classes from './NavigationItems.module.css';\r\nimport NavigationItem from './NavigationItem/NavigationItem';\r\n\r\nconst navigationItems = (props) => (\r\n    <ul className={classes.NavigationItems}>\r\n        <NavigationItem link='/' exact>Burger Builder</NavigationItem>\r\n        <NavigationItem link='/orders'>Orders</NavigationItem>\r\n    </ul>\r\n);\r\n\r\nexport default navigationItems;\r\n","import React from 'react'\r\nimport classes from './DrawerToggle.module.css';\r\n\r\nconst drawerToggle = (props) => (\r\n    <div className={classes.DrawerToggle} onClick={props.clicked}>\r\n        <div></div>\r\n        <div></div>\r\n        <div></div>\r\n    </div>\r\n);\r\n\r\nexport default drawerToggle;","import React from 'react';\r\nimport classes from './Toolbar.module.css';\r\nimport Logo from '../../Logo/Logo';\r\nimport NavigationItems from '../NavigationItems/NavigationItems';\r\nimport DrawerToggle from '../SideDrawer/DrawerToggle/DrawerToggle';\r\n\r\nconst toolbar = (props) => (\r\n    <header className={classes.Toolbar}>\r\n        <DrawerToggle clicked={props.drawerToggleClicked} />\r\n        <div className={classes.Logo}><Logo /></div>\r\n        <nav className={classes.DesktopOnly}>\r\n            <NavigationItems />\r\n        </nav>\r\n    </header>\r\n);\r\nexport default toolbar;","import React from 'react';\r\nimport classes from './Backdrop.module.css';\r\n\r\nconst backdrop = (props) => (\r\n    props.show ?\r\n        <div className={classes.Backdrop} onClick={props.clicked}></div>\r\n        : null\r\n);\r\n\r\nexport default backdrop;","import React from 'react';\r\nimport Logo from '../../Logo/Logo';\r\nimport NavigationItems from '../NavigationItems/NavigationItems';\r\nimport classes from './SideDrawer.module.css';\r\nimport Backdrop from '../../UI/Backdrop/Backdrop';\r\n\r\nconst sideDrawer = (props) => {\r\n    let attachedClasses = [classes.SideDrawer, classes.Close];\r\n    if (props.open) {\r\n        attachedClasses = [classes.SideDrawer, classes.Open];\r\n    }\r\n    return (\r\n        <React.Fragment>\r\n            <Backdrop show={props.open} clicked={props.closed} />\r\n            <div className={attachedClasses.join(' ')}>\r\n                <div className={classes.Logo}><Logo /></div>\r\n                <nav>\r\n                    <NavigationItems />\r\n                </nav>\r\n            </div>\r\n        </React.Fragment>\r\n    );\r\n};\r\n\r\nexport default sideDrawer;","import React, { Component } from 'react';\r\nimport classes from './Layout.module.css';\r\nimport Toolbar from '../../components/Navigation/Toolbar/Toolbar';\r\nimport SideDrawer from '../../components/Navigation/SideDrawer/SideDrawer';\r\n\r\nclass Layout extends Component {\r\n    state = {\r\n        showSideDrawer: false\r\n    }\r\n\r\n    sideDrawerClosedHandler = () => {\r\n        this.setState({ showSideDrawer: false });\r\n    }\r\n\r\n    sideDrawerToggleHandler = () => {\r\n        this.setState((prevState) => {\r\n            return { showSideDrawer: !prevState.showSideDrawer };\r\n        });\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <React.Fragment>\r\n                <Toolbar drawerToggleClicked={this.sideDrawerToggleHandler} />\r\n                <SideDrawer\r\n                    open={this.state.showSideDrawer}\r\n                    closed={this.sideDrawerClosedHandler} />\r\n                <main className={classes.Content}>\r\n                    {this.props.children}\r\n                </main>\r\n            </React.Fragment>\r\n        )\r\n    }\r\n};\r\n\r\nexport default Layout;","import axios from 'axios';\r\n\r\nconst instance = axios.create({\r\n    baseURL: 'https://react-burger-builder-ac7a6.firebaseio.com/'\r\n});\r\n\r\nexport default instance;","import React from 'react';\r\nimport classes from './BuildControl.module.css';\r\n\r\nconst buildControl = (props) => (\r\n    <div className={classes.BuildControl}>\r\n        <div className={classes.Label}>{props.label}</div>\r\n        <button className={classes.Less}\r\n            onClick={props.removed}\r\n            disabled={props.disabled}\r\n        >Less</button>\r\n        <button className={classes.More} onClick={props.added}>More</button>\r\n    </div>\r\n);\r\n\r\nexport default buildControl;","import React from 'react';\r\nimport BuildControl from './BuildControl/BuildControl';\r\nimport classes from './BuildControls.module.css';\r\n\r\nconst controls = [\r\n    { label: 'Salad', type: 'salad' },\r\n    { label: 'Bacon', type: 'bacon' },\r\n    { label: 'Cheese', type: 'cheese' },\r\n    { label: 'Meat', type: 'meat' },\r\n];\r\n\r\nconst buildControls = (props) => (\r\n    <div className={classes.BuildControls}>\r\n        <p>Current Price: <strong>{props.price.toFixed(2)}</strong></p>\r\n        {controls.map(control =>\r\n            <BuildControl\r\n                key={control.label}\r\n                label={control.label}\r\n                added={() => props.ingredientAdded(control.type)}\r\n                removed={() => props.ingredientRemoved(control.type)}\r\n                disabled={props.disabledInfo[control.type]}\r\n            />\r\n        )}\r\n        <button\r\n            className={classes.OrderButton}\r\n            disabled={props.orderNowDisabled}\r\n            onClick={props.orderNowClicked}\r\n        >ORDER NOW</button>\r\n    </div>\r\n);\r\n\r\nexport default buildControls;","import React, { Component } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport classes from './BurgerIngredient.module.css';\r\n\r\nclass BurgerIngredient extends Component {\r\n    render() {\r\n        let ingredient = null;\r\n        switch (this.props.type) {\r\n            case ('bread-bottom'):\r\n                ingredient = <div className={classes.BreadBottom}></div>\r\n                break;\r\n            case ('bread-top'):\r\n                ingredient = (\r\n                    <div className={classes.BreadTop}>\r\n                        <div className={classes.Seeds1}></div>\r\n                        <div className={classes.Seeds2}></div>\r\n                    </div>\r\n                );\r\n                break;\r\n            case ('meat'):\r\n                ingredient = <div className={classes.Meat}></div>;\r\n                break;\r\n            case ('cheese'):\r\n                ingredient = <div className={classes.Cheese}></div>;\r\n                break;\r\n            case ('bacon'):\r\n                ingredient = <div className={classes.Bacon}></div>;\r\n                break;\r\n            case ('salad'):\r\n                ingredient = <div className={classes.Salad}></div>;\r\n                break;\r\n            default:\r\n                ingredient = null;\r\n        }\r\n        return ingredient;\r\n    }\r\n}\r\n\r\nBurgerIngredient.propTypes = {\r\n    type: PropTypes.string.isRequired\r\n}\r\n\r\nexport default BurgerIngredient;","import React from 'react';\r\nimport classes from './Burger.module.css';\r\nimport BurgerIngredient from './BurgerIngredient/BurgerIngredient';\r\n\r\nconst burger = (props) => {\r\n    let transformedIngredient = Object.keys(props.ingredients)\r\n        .map(igKey => \r\n            [...Array(props.ingredients[igKey])]\r\n            .map((_, i) => \r\n                <BurgerIngredient key={igKey + i} type={igKey}/>\r\n            )\r\n        ).reduce((arr, el) => arr.concat(el), []);\r\n    if (transformedIngredient.length === 0) {\r\n        transformedIngredient = <p>Please start adding ingredients</p>\r\n    }\r\n    return (\r\n        <div className={classes.Burger}>\r\n            <BurgerIngredient type=\"bread-top\" />\r\n            {transformedIngredient}\r\n            <BurgerIngredient type=\"bread-bottom\" />\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default burger;\r\n","import React from 'react';\r\nimport classes from './Button.module.css';\r\n\r\nconst Button = (props) => (\r\n    <button\r\n        disabled={props.disabled}\r\n        className={[classes.Button, classes[props.btnType]].join(' ')}\r\n        onClick={props.clicked}\r\n    >{props.children}</button>\r\n);\r\n\r\nexport default Button;","import React from 'react';\r\nimport Button from '../../UI/Button/Button';\r\n\r\nconst orderSummary = (props) => {\r\n    const ingredientSummary = Object.keys(props.ingredients)\r\n        .map(igKey =>\r\n            <li key={igKey}>\r\n                <span style={{ textTransform: 'capitalize' }}>{igKey}</span> : {props.ingredients[igKey]}\r\n            </li>)\r\n    return (\r\n        <React.Fragment>\r\n            <h3>Your Order</h3>\r\n            <p>A delicious burger with the following ingredients:</p>\r\n            <ul>\r\n                {ingredientSummary}\r\n            </ul>\r\n            <p><strong>Total Price: {props.price.toFixed(2)}</strong></p>\r\n            <p>Continue to Checkout?</p>\r\n            <Button btnType='Danger' clicked={props.cancel}>CANCEL</Button>\r\n            <Button btnType='Success' clicked={props.continue}>CONTINUE</Button>\r\n        </React.Fragment>\r\n    )\r\n};\r\n\r\nexport default orderSummary;","import React, { Component } from 'react';\r\nimport classes from './Modal.module.css';\r\nimport Backdrop from '../Backdrop/Backdrop';\r\nclass Modal extends Component {\r\n    shouldComponentUpdate = (nextProps, nextState) => {\r\n        return nextProps.show !== this.props.show || nextProps.children !== this.props.children;\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <React.Fragment>\r\n                <Backdrop show={this.props.show} clicked={this.props.backdropClicked} />\r\n                <div\r\n                    className={classes.Modal}\r\n                    style={{\r\n                        transform: this.props.show ? 'translateY(0)' : 'translateY(-100vh)',\r\n                        opacity: this.props.show ? '1' : '0'\r\n                    }}\r\n                >\r\n                    {this.props.children}\r\n                </div>\r\n            </React.Fragment>\r\n        )\r\n    }\r\n}\r\n\r\nexport default Modal;","import React from 'react';\r\nimport classes from './Spinner.module.css';\r\n\r\nconst Spinner = (props) => (\r\n    <div className={classes.Loader}>Loading...</div>\r\n);\r\n\r\nexport default Spinner;\r\n","import React, { Component } from 'react';\r\nimport Modal from '../../components/UI/Modal/Modal';\r\n\r\nconst withErrorHandler = (WrappedComponent, axios) => {\r\n    return class extends Component {\r\n        state = {\r\n            error: null\r\n        }\r\n\r\n        componentWillMount() {\r\n            this.reqInterceptor = axios.interceptors.request.use( req => {\r\n                this.setState({ error: null });\r\n                return req;\r\n            } );\r\n            this.resInterceptor = axios.interceptors.response.use( res => res,\r\n                error => this.setState({ error: error })\r\n            );\r\n        }\r\n\r\n        componentWillUnmount() {\r\n            axios.interceptors.request.eject(this.reqInterceptor);\r\n            axios.interceptors.response.eject(this.resInterceptor);\r\n        }\r\n\r\n        errorConfirmedHandler = () => this.setState({error: null})\r\n\r\n        render() {\r\n            return (\r\n                <React.Fragment>\r\n                    <Modal show={this.state.error}\r\n                    backdropClicked={this.errorConfirmedHandler}>\r\n                        {this.state.error? this.state.error.message : null}\r\n                    </Modal>\r\n                    <WrappedComponent {...this.props}></WrappedComponent>\r\n                </React.Fragment>\r\n            )\r\n        }\r\n    }\r\n}\r\n\r\nexport default withErrorHandler;","import React, { Component } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport axios from '../../axios-orders';\r\nimport BuildControls from '../../components/Burger/BuildControls/BuildControls';\r\nimport Burger from '../../components/Burger/Burger';\r\nimport OrderSummary from '../../components/Burger/OrderSummary/OrderSummary';\r\nimport Modal from '../../components/UI/Modal/Modal';\r\nimport Spinner from '../../components/UI/Spinner/Spinner';\r\nimport withErrorHandler from '../../hoc/withErrorHandler/withErrorHandler';\r\nimport * as actions from '../../store/actions/index';\r\nclass BurgerBuilder extends Component {\r\n    state = {\r\n        purchasing: false\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.props.onInitIngredients();\r\n    }\r\n\r\n    updatedOrderNowDisabled = ingredients =>\r\n        Object.keys(ingredients)\r\n            .map(igKey => ingredients[igKey])\r\n            .reduce((sum, el) => sum + el, 0)\r\n        <= 0;\r\n\r\n    orderNowClickedHandler = () => {\r\n        this.setState({ purchasing: true });\r\n    };\r\n\r\n    orderCanceledHandler = () => {\r\n        this.setState({ purchasing: false });\r\n    };\r\n\r\n    orderContinueHandler = () => {\r\n        this.props.onInitPurchase();\r\n        this.props.history.push('/checkout');\r\n    };\r\n\r\n    render() {\r\n        const disabledInfo = { ...this.props.ings }\r\n        for (let key in disabledInfo) {\r\n            disabledInfo[key] = disabledInfo[key] <= 0;\r\n        };\r\n        // { salad: true, meat: false...}\r\n        let orderSummary = null;\r\n        let burger = this.props.error ? <p>Burger Ingredients Cannot be loadded</p> : <Spinner />;\r\n        if (this.props.ings) {\r\n            burger = (\r\n                <React.Fragment>\r\n                    <Burger ingredients={this.props.ings} />\r\n                    <BuildControls\r\n                        ingredientAdded={this.props.onIngredientAdded}\r\n                        ingredientRemoved={this.props.onIngredientRemoved}\r\n                        disabledInfo={disabledInfo}\r\n                        price={this.props.price}\r\n                        orderNowDisabled={this.updatedOrderNowDisabled(this.props.ings)}\r\n                        orderNowClicked={this.orderNowClickedHandler}\r\n                    />\r\n                </React.Fragment>\r\n            );\r\n            orderSummary = <OrderSummary\r\n                ingredients={this.props.ings}\r\n                price={this.props.price}\r\n                cancel={this.orderCanceledHandler}\r\n                continue={this.orderContinueHandler} />;\r\n        }\r\n        return (\r\n            <React.Fragment>\r\n                <Modal show={this.state.purchasing} backdropClicked={this.orderCanceledHandler}>\r\n                    {orderSummary}\r\n                </Modal>\r\n                {burger}\r\n            </React.Fragment>\r\n        )\r\n    }\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n    return {\r\n        ings: state.burgerBuilder.ingredients,\r\n        price: state.burgerBuilder.totalPrice,\r\n        error: state.burgerBuilder.error\r\n    }\r\n};\r\n\r\nconst mapDispatchToProps = dispatch => {\r\n    return {\r\n        onIngredientAdded: (ingName) => dispatch(actions.addIngredient(ingName)),\r\n        onIngredientRemoved: (ingName) => dispatch(actions.removeIngredient(ingName)),\r\n        onInitIngredients: () => dispatch(actions.initIngredients()),\r\n        onInitPurchase: () => dispatch(actions.purchaseInit())\r\n    }\r\n};\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(withErrorHandler(BurgerBuilder, axios));\r\n","\r\nimport axios from '../../axios-orders';\r\nimport * as actionTypes from './actionsTypes';\r\n\r\nexport const addIngredient = name => {\r\n    return {\r\n        type: actionTypes.ADD_INGREDIENT,\r\n        ingredientName: name\r\n    };\r\n};\r\n\r\nexport const removeIngredient = name => {\r\n    return {\r\n        type: actionTypes.REMOVE_INGREDIENT,\r\n        ingredientName: name\r\n    };\r\n};\r\n\r\nexport const setIngredients = ingredients => {\r\n    return {\r\n        type: actionTypes.SET_INGREDIENTS,\r\n        ingredients: ingredients\r\n    };\r\n};\r\n\r\nexport const fetchIngredientsFailed = () =>\r\n    ({\r\n        type: actionTypes.FETCH_INGREDIENTS_FAILED\r\n    });\r\n\r\nexport const initIngredients = () => {\r\n    return dispatch => {\r\n        axios.get('ingredients.json')\r\n            .then(res => {\r\n                dispatch(setIngredients(res.data));\r\n            }).catch(err => {\r\n                dispatch(fetchIngredientsFailed());\r\n            });\r\n    };\r\n};","export const ADD_INGREDIENT = 'ADD_INGREDIENT';\r\nexport const REMOVE_INGREDIENT = 'REMOVE_INGREDIENT';\r\nexport const SET_INGREDIENTS = 'SET_INGREDIENTS';\r\nexport const FETCH_INGREDIENTS_FAILED = 'FETCH_INGREDIENTS_FAILED';\r\n\r\nexport const PURCHASE_BURGER_START = 'PURCHASE_BURGER_START';\r\nexport const PURCHASE_BURGER_SUCCESS = 'PURCHASE_BURGER_SUCCESS';\r\nexport const PURCHASE_BURGER_FAILED = 'PURCHASE_BURGER_FAILED';\r\nexport const PURCHASE_INIT = 'PURCHASE_INIT';\r\n\r\nexport const FETCH_ORDERS_START = 'FETCH_ORDERS_START';\r\nexport const FETCH_ORDERS_SUCCESS = 'FETCH_ORDERS_SUCCESS';\r\nexport const FETCH_ORDERS_FAILED = 'FETCH_ORDERS_FAILED';\r\n","import axios from '../../axios-orders';\r\nimport * as actionTypes from './actionsTypes';\r\n\r\nexport const purchaseBurgerStart = () => {\r\n    return {\r\n        type: actionTypes.PURCHASE_BURGER_START\r\n    };\r\n};\r\n\r\nexport const purchaseBurgerSuccess = (id, orderData) => {\r\n    return {\r\n        type: actionTypes.PURCHASE_BURGER_SUCCESS,\r\n        orderId: id,\r\n        orderData: orderData\r\n    };\r\n};\r\n\r\nexport const purchaseBurgerFail = error => {\r\n    return {\r\n        type: actionTypes.PURCHASE_BURGER_FAILED,\r\n        error: error\r\n    };\r\n};\r\n\r\nexport const purchaseBurger = orderData => {\r\n    return dispatch => {\r\n        dispatch(purchaseBurgerStart());\r\n        axios\r\n            .post('/orders.json', orderData)\r\n            .then(res => {\r\n                dispatch(purchaseBurgerSuccess(res.data.name, orderData));\r\n            })\r\n            .catch(err => {\r\n                dispatch(purchaseBurgerFail(err));\r\n            });\r\n    };\r\n};\r\n\r\nexport const purchaseInit = () => ({ type: actionTypes.PURCHASE_INIT });\r\n\r\nexport const fetchOrdersStart = () => {\r\n    return {\r\n        type: actionTypes.FETCH_ORDERS_START\r\n    };\r\n};\r\n\r\nexport const fetchOrdersSuccess = orders => {\r\n    return {\r\n        type: actionTypes.FETCH_ORDERS_SUCCESS,\r\n        orders: orders\r\n    };\r\n};\r\n\r\nexport const fetchOrdersFail = error => {\r\n    return {\r\n        type: actionTypes.FETCH_ORDERS_FAILED,\r\n        error: error\r\n    };\r\n};\r\n\r\nexport const fetchOrders = () => {\r\n    return dispatch => {\r\n        dispatch(fetchOrdersStart());\r\n        axios\r\n            .get('/orders.json')\r\n            .then(res => {\r\n                const fetchedOrders = [];\r\n                for (let key in res.data) {\r\n                    fetchedOrders.push({\r\n                        id: key,\r\n                        ...res.data[key]\r\n                    });\r\n                }\r\n                dispatch(fetchOrdersSuccess(fetchedOrders));\r\n            })\r\n            .catch(err => {\r\n                dispatch(fetchOrdersFail(err));\r\n            });\r\n    };\r\n};\r\n","import React from 'react';\r\nimport Burger from '../../Burger/Burger';\r\nimport Button from '../../UI/Button/Button';\r\nimport classes from './CheckoutSummary.module.css'\r\n\r\nconst checkoutSummary = (props) => {\r\n    return (\r\n        <div className={classes.CheckoutSummary}>\r\n            <h1>We hope it tastes well!</h1>\r\n            <div style={{ width: '100%', margin: 'auto' }}>\r\n                <Burger ingredients={props.ingredients} />\r\n            </div>\r\n            <Button btnType='Danger' clicked={props.checkoutCanceled}>CANCEL</Button>\r\n            <Button btnType='Success' clicked={props.checkoutContinued}>CONTINUE</Button>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default checkoutSummary;","import React from 'react';\r\nimport classes from './Input.module.css'\r\n\r\nconst input = (props) => {\r\n    let inputElemnet = null;\r\n    let inputClasses = [classes.InputElement];\r\n    if (props.invalid && props.shouldValidate && props.touched) {\r\n        inputClasses.push(classes.Invalid);\r\n    }\r\n\r\n    switch (props.elementType) {\r\n        case ('input'):\r\n            inputElemnet = <input\r\n                className={inputClasses.join(' ')}\r\n                {...props.elementConfig}\r\n                value={props.value}\r\n                onChange={props.changed} />\r\n            break;\r\n        case ('textarea'):\r\n            inputElemnet = <textarea\r\n                className={inputClasses.join(' ')}\r\n                {...props.elementConfig}\r\n                value={props.value}\r\n                onChange={props.changed} />\r\n            break;\r\n        case ('select'):\r\n            inputElemnet =\r\n                <select\r\n                    className={inputClasses.join(' ')}\r\n                    value={props.value}\r\n                    onChange={props.changed}>\r\n                    {props.elementConfig.options.map(option =>\r\n                        <option key={option.value} value={option.value}>\r\n                            {option.displayValue}\r\n                        </option>\r\n                    )}\r\n                </select>\r\n            break;\r\n        default:\r\n            inputElemnet = <input\r\n                className={inputClasses.join(' ')}\r\n                {...props.elementConfig}\r\n                value={props.value}\r\n                onChange={props.changed} />\r\n    }\r\n\r\n    return (\r\n        <div className={classes.Input}>\r\n            <label className={classes.Label}>{props.label}</label>\r\n            {inputElemnet}\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default input;","import React, { Component } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport Button from '../../../components/UI/Button/Button';\r\nimport Spinner from '../../../components/UI/Spinner/Spinner';\r\nimport classes from './ContactData.module.css';\r\nimport axios from '../../../axios-orders';\r\nimport Input from '../../../components/UI/Input/Input';\r\nimport withErrorHandler from '../../../hoc/withErrorHandler/withErrorHandler';\r\nimport * as actions from '../../../store/actions/index';\r\n\r\nclass ContactData extends Component {\r\n    state = {\r\n        orderForm: {\r\n            name: {\r\n                elementType: 'input',\r\n                elementConfig: {\r\n                    type: 'text',\r\n                    placeholder: 'Your Name'\r\n                },\r\n                value: '',\r\n                validation: {\r\n                    required: true\r\n                },\r\n                valid: false,\r\n                touched: false\r\n            },\r\n            street: {\r\n                elementType: 'input',\r\n                elementConfig: {\r\n                    type: 'text',\r\n                    placeholder: 'Street'\r\n                },\r\n                value: '',\r\n                validation: {\r\n                    required: true\r\n                },\r\n                valid: false,\r\n                touched: false\r\n            },\r\n            zipCode: {\r\n                elementType: 'input',\r\n                elementConfig: {\r\n                    type: 'text',\r\n                    placeholder: 'Zip Code'\r\n                },\r\n                value: '',\r\n                validation: {\r\n                    required: true,\r\n                    minLength: 5,\r\n                    maxeLength: 5\r\n                },\r\n                valid: false,\r\n                touched: false\r\n            },\r\n            country: {\r\n                elementType: 'input',\r\n                elementConfig: {\r\n                    type: 'text',\r\n                    placeholder: 'Country'\r\n                },\r\n                value: '',\r\n                validation: {\r\n                    required: true\r\n                },\r\n                valid: false,\r\n                touched: false\r\n            },\r\n            email: {\r\n                elementType: 'email',\r\n                elementConfig: {\r\n                    type: 'email',\r\n                    placeholder: 'Your E-mail'\r\n                },\r\n                value: '',\r\n                validation: {\r\n                    required: true\r\n                },\r\n                valid: false,\r\n                touched: false\r\n            },\r\n            deliveryMethod: {\r\n                elementType: 'select',\r\n                elementConfig: {\r\n                    options: [\r\n                        { value: 'fastest', displayValue: 'Fastest' },\r\n                        { value: 'cheapest', displayValue: 'Cheapest' },\r\n                    ]\r\n                },\r\n                value: 'fastest',\r\n                validation: {},\r\n                valid: true\r\n            }\r\n        },\r\n        formIsValid: false\r\n    }\r\n\r\n    orderHandler = (event) => {\r\n        // eslint-disable-next-line no-restricted-globals\r\n        event.preventDefault();\r\n        let formData = {};\r\n        for (let formElementId in this.state.orderForm) {\r\n            formData[formElementId] = this.state.orderForm[formElementId].value;\r\n        }\r\n        const order = {\r\n            ingredients: this.props.ings,\r\n            price: this.props.price,\r\n            orderData: formData\r\n        }\r\n\r\n        this.props.onOrderBurger(order);\r\n    }\r\n\r\n    inputChangedHandler = (event, inputId) => {\r\n        const updatedOrderForm = { ...this.state.orderForm };\r\n        const updatedFormElement = { ...updatedOrderForm[inputId] };\r\n        updatedFormElement.value = event.target.value;\r\n        updatedFormElement.valid = this.checkVaildity(updatedFormElement.value, updatedFormElement.validation);\r\n        updatedFormElement.touched = true;\r\n        updatedOrderForm[inputId] = updatedFormElement;\r\n\r\n        let formIsValid = true;\r\n        for (let inputId in updatedOrderForm) {\r\n            formIsValid = updatedOrderForm[inputId].valid && formIsValid\r\n        }\r\n        this.setState({ orderForm: updatedOrderForm, formIsValid: formIsValid });\r\n    }\r\n\r\n    checkVaildity(value, rules) {\r\n        let isValid = true;\r\n        if (!rules) {\r\n            return isValid;\r\n        }\r\n        if (rules.required) {\r\n            isValid = value.trim() !== '' && isValid;\r\n        }\r\n        if (rules.minLength) {\r\n            isValid = value.length >= rules.minLength && isValid;\r\n        }\r\n        if (rules.maxLength) {\r\n            isValid = value.length <= rules.maxLength && isValid;\r\n        }\r\n        return isValid;\r\n    }\r\n\r\n    render() {\r\n        const formElementsArray = [];\r\n        for (let key in this.state.orderForm) {\r\n            formElementsArray.push({\r\n                id: key,\r\n                config: this.state.orderForm[key]\r\n            })\r\n        }\r\n        let form = (<form onSubmit={this.orderHandler}>\r\n            {formElementsArray.map(formElement =>\r\n                <Input\r\n                    key={formElement.id}\r\n                    elementType={formElement.config.elementType}\r\n                    elementConfig={formElement.config.elementConfig}\r\n                    value={formElement.config.value}\r\n                    invalid={!formElement.config.valid}\r\n                    shouldValidate={formElement.config.validation}\r\n                    touched={formElement.config.touched}\r\n                    changed={(event) => this.inputChangedHandler(event, formElement.id)} />\r\n            )}\r\n            <Button btnType=\"Success\" disabled={!this.state.formIsValid}>ORDER</Button>\r\n        </form>);\r\n        if (this.props.loading) {\r\n            form = <Spinner />\r\n        }\r\n        return (\r\n            <div className={classes.ContactData}>\r\n                <h4>Enter your contact data</h4>\r\n                {form}\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n    return {\r\n        ings: state.burgerBuilder.ingredients,\r\n        price: state.burgerBuilder.totalPrice,\r\n        loading: state.order.loading\r\n    }\r\n};\r\n\r\nconst mapDispatchToProps = dispatch => {\r\n    return {\r\n        onOrderBurger: (orderData) => dispatch(actions.purchaseBurger(orderData))\r\n    }\r\n};\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(withErrorHandler(ContactData, axios));\r\n","import React, { Component } from 'react';\r\nimport { Route, Redirect } from 'react-router-dom';\r\nimport { connect } from 'react-redux';\r\n\r\nimport CheckoutSummary from '../../components/Order/CheckoutSummary/CheckoutSummary';\r\nimport ContactData from './ContactData/ContactData';\r\n\r\nclass Checkout extends Component {\r\n    checkoutCanceledHandler = () => {\r\n        this.props.history.goBack();\r\n    }\r\n\r\n    checkoutContinuedHandler = () => {\r\n        this.props.history.replace('/checkout/contact-data');\r\n    }\r\n\r\n    render() {\r\n        let summary = <Redirect to=\"/\" />\r\n        if (this.props.ings) {\r\n            const purchasedRedirect = this.props.purchased ? <Redirect to=\"/\" /> : null;\r\n            summary = (\r\n                <div>\r\n                    {purchasedRedirect}\r\n                    <CheckoutSummary\r\n                        ingredients={this.props.ings}\r\n                        checkoutCanceled={this.checkoutCanceledHandler}\r\n                        checkoutContinued={this.checkoutContinuedHandler} />\r\n                    <Route\r\n                        path={this.props.match.path + '/contact-data'}\r\n                        component={ContactData} />\r\n                </div>\r\n            );\r\n        }\r\n        return summary;\r\n    }\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n    return {\r\n        ings: state.burgerBuilder.ingredients,\r\n        purchased: state.order.purchased\r\n    };\r\n};\r\n\r\nexport default connect(mapStateToProps)(Checkout);","import React from 'react';\r\nimport classes from './Order.module.css'\r\n\r\nconst order = (props) => {\r\n    let ingredients = [];\r\n    for (let ingredientName in props.ingredients) {\r\n        ingredients.push({\r\n            name: ingredientName,\r\n            qty: props.ingredients[ingredientName]\r\n        });\r\n    }\r\n    const ingredientsOutput = ingredients.map(ig =>\r\n        <span\r\n            style={{\r\n                textTransform: 'capitalize',\r\n                display: 'inline-block',\r\n                margin: '0 8px',\r\n                border: '1px solid #ccc',\r\n                padding: '5px'\r\n            }}\r\n            key={ig.name}>{ig.name} ({ig.qty})</span>);\r\n    return (\r\n        <div className={classes.Order} key={props.id}>\r\n            <p>Ingredients: {ingredientsOutput} </p>\r\n            <p>Price: <strong>USD {props.price.toFixed(2)}</strong></p>\r\n        </div>\r\n    )\r\n};\r\n\r\nexport default order;","import React, { Component } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport axios from '../../axios-orders';\r\nimport Order from '../../components/Order/Order';\r\nimport Spinner from '../../components/UI/Spinner/Spinner';\r\nimport withErrorHandler from '../../hoc/withErrorHandler/withErrorHandler';\r\nimport * as actions from '../../store/actions/index';\r\n\r\nclass Orders extends Component {\r\n\r\n    componentDidMount() {\r\n        this.props.onFetchOrders();\r\n    }\r\n\r\n    render() {\r\n        let orders = this.props.loading ?\r\n            <Spinner />\r\n            :\r\n            this.props.orders.map(order =>\r\n                <Order key={order.id}\r\n                    ingredients={order.ingredients}\r\n                    id={order.id}\r\n                    price={order.price} />)\r\n            ;\r\n        return (<div>{orders}</div>);\r\n    }\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n    return {\r\n        orders: state.order.orders,\r\n        loading: state.order.loading\r\n    };\r\n}\r\n\r\nconst mapDispatchToProps = dispatch => {\r\n    return {\r\n        onFetchOrders: () => dispatch(actions.fetchOrders())\r\n    };\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(withErrorHandler(Orders, axios));\r\n","import React from 'react';\r\nimport { Route, Switch } from 'react-router-dom'\r\n\r\nimport Layout from './containers/Layout/Layout';\r\nimport BurgerBuilder from './containers/BurgerBuilder/BurgerBuilder';\r\nimport Checkout from './containers/Checkout/Checkout';\r\nimport Orders from './containers/Orders/Orders';\r\n\r\nfunction App() {\r\n  return (\r\n    <div>\r\n      <Layout>\r\n        <Switch>\r\n          <Route path='/checkout' component={Checkout} />\r\n          <Route path='/orders' component={Orders} />\r\n          <Route path='/' exact component={BurgerBuilder} />\r\n        </Switch>\r\n      </Layout>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.1/8 is considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl)\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready.then(registration => {\r\n      registration.unregister();\r\n    });\r\n  }\r\n}\r\n","export const updateObject = (oldObject, updatedProperties) => {\r\n    return {\r\n        ...oldObject,\r\n        ...updatedProperties\r\n    }\r\n}","import * as actionTypes from '../actions/actionsTypes';\r\nimport { updateObject } from '../utility';\r\n\r\nconst initialState = {\r\n    ingredients: null,\r\n    totalPrice: 4,\r\n    error: false\r\n};\r\n\r\nconst INGREDIENT_PRICES = {\r\n    salad: 0.5,\r\n    bacon: 0.7,\r\n    cheese: 0.4,\r\n    meat: 1.3\r\n};\r\n\r\nconst addIngredient = (state, action) => {\r\n    const updatedIngredient = {\r\n        [action.ingredientName]: state.ingredients[action.ingredientName] + 1\r\n    };\r\n    const updatedIngredients = updateObject(\r\n        state.ingredients,\r\n        updatedIngredient\r\n    );\r\n    const updatedState = {\r\n        ingredients: updatedIngredients,\r\n        totalPrice: state.totalPrice + INGREDIENT_PRICES[action.ingredientName]\r\n    };\r\n    return updateObject(state, updatedState);\r\n};\r\n\r\nconst removeIngredient = (state, action) => {\r\n    const updatedIngredient = {\r\n        [action.ingredientName]: state.ingredients[action.ingredientName] - 1\r\n    };\r\n    const updatedIngredients = updateObject(\r\n        state.ingredients,\r\n        updatedIngredient\r\n    );\r\n    const updatedState = {\r\n        ingredients: updatedIngredients,\r\n        totalPrice: state.totalPrice + INGREDIENT_PRICES[action.ingredientName]\r\n    };\r\n    return updateObject(state, updatedState);\r\n};\r\n\r\nconst setIngredient = (state, action) => {\r\n    return updateObject(state, {\r\n        ingredients: {\r\n            salad: action.ingredients.salad,\r\n            bacon: action.ingredients.bacon,\r\n            cheese: action.ingredients.cheese,\r\n            meat: action.ingredients.meat\r\n        },\r\n        totalPrice: initialState.totalPrice,\r\n        error: false\r\n    });\r\n};\r\n\r\nconst fetchIngredientsFailed = (state, action) => {\r\n    return updateObject(state, { error: true });\r\n};\r\n\r\nconst reducer = (state = initialState, action) => {\r\n    switch (action.type) {\r\n        case actionTypes.ADD_INGREDIENT:\r\n            return addIngredient(state, action);\r\n        case actionTypes.REMOVE_INGREDIENT:\r\n            return removeIngredient(state, action);\r\n        case actionTypes.SET_INGREDIENTS:\r\n            return setIngredient(state, action);\r\n        case actionTypes.FETCH_INGREDIENTS_FAILED:\r\n            return fetchIngredientsFailed(state, action);\r\n        default:\r\n            return state;\r\n    }\r\n};\r\n\r\nexport default reducer;\r\n","import * as actionTypes from '../actions/actionsTypes';\r\nimport { updateObject } from '../utility';\r\n\r\nconst initialState = {\r\n    orders: [],\r\n    loading: false,\r\n    purchased: false\r\n};\r\n\r\nconst purchaseBurgerStart = (state, action) => {\r\n    return updateObject(state, { loading: true });\r\n};\r\n\r\nconst purchaseBurgerSuccess = (state, action) => {\r\n    const newOrder = updateObject(action.orderData, {\r\n        id: action.orderId\r\n    });\r\n    return updateObject(state, {\r\n        loading: false,\r\n        purchased: true,\r\n        orders: state.orders.concat(newOrder)\r\n    });\r\n};\r\n\r\nconst purchaseBurgerFailed = (state, action) => {\r\n    return updateObject(state, {\r\n        loading: false,\r\n        error: action.error\r\n    });\r\n};\r\n\r\nconst purchaseInit = (state, action) => {\r\n    return updateObject(state, { loading: false });\r\n};\r\n\r\nconst fetchOrdersStart = (state, action) => {\r\n    return updateObject(state, { loading: true });\r\n};\r\n\r\nconst fetchOrdersSuccess = (state, action) => {\r\n    return updateObject(state, {\r\n        loading: false,\r\n        orders: action.orders\r\n    });\r\n};\r\n\r\nconst fetchOrdersFailed = (state, action) => {\r\n    return updateObject(state, { loading: false });\r\n};\r\n\r\nconst reducer = (state = initialState, action) => {\r\n    switch (action.type) {\r\n        case actionTypes.PURCHASE_BURGER_START:\r\n            return purchaseBurgerStart(state, action);\r\n        case actionTypes.PURCHASE_BURGER_SUCCESS:\r\n            return purchaseBurgerSuccess(state, action);\r\n        case actionTypes.PURCHASE_BURGER_FAILED:\r\n            return purchaseBurgerFailed(state, action);\r\n        case actionTypes.PURCHASE_INIT:\r\n            return purchaseInit(state, action);\r\n        case actionTypes.FETCH_ORDERS_START:\r\n            return fetchOrdersStart(state, action);\r\n        case actionTypes.FETCH_ORDERS_SUCCESS:\r\n            return fetchOrdersSuccess(state, action);\r\n        case actionTypes.FETCH_ORDERS_FAILED:\r\n            return fetchOrdersFailed(state, action);\r\n        default:\r\n            return state;\r\n    }\r\n};\r\n\r\nexport default reducer;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport { BrowserRouter } from 'react-router-dom';\r\nimport { Provider } from 'react-redux';\r\nimport { createStore, applyMiddleware, compose, combineReducers } from 'redux';\r\nimport thunk from 'redux-thunk';\r\n\r\nimport './index.css';\r\nimport App from './App';\r\nimport * as serviceWorker from './serviceWorker';\r\nimport burgerBuilderReducer from './store/reducers/burgerBuilder';\r\nimport orderReducer from './store/reducers/order';\r\n\r\n// const logger = store => {\r\n//     return next => {\r\n//         return action => {\r\n//             console.log('[Middleware] Dispatching', action);\r\n//             const result = next(action);\r\n//             console.log('[Middleware] Next state', store.getState());\r\n//             return result;\r\n//         }\r\n//     }\r\n// };\r\n// const store = createStore(burgerBuilderReducer, composeEnhancers(applyMiddleware(logger, thunk)));\r\n\r\nconst composeEnhancers = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose;\r\nconst rootReducer = combineReducers({\r\n    burgerBuilder: burgerBuilderReducer,\r\n    order: orderReducer\r\n});\r\nconst store = createStore(rootReducer, composeEnhancers(applyMiddleware(thunk)));\r\n\r\nconst app = (\r\n    <Provider store={store}>\r\n        <BrowserRouter basename={process.env.PUBLIC_URL}>\r\n            <App />\r\n        </BrowserRouter>\r\n    </Provider>\r\n);\r\n\r\nReactDOM.render(app, document.getElementById('root'));\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}